# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

e = [[10, 43, 13, 54], [94, 1, 93, 8]]
d = [[10, 43, 13, 54], [94, 1, 93, 8]]
a = [[10, 43, 13, 54], [94, 1, 93, 8]]
b = [[10, 43, 13, 54], [94, 1, 93, 8]]

q = [[11, 43, 139, 754], [94, 1, 93, 18], [110, 3, 13, 54], [42, 31, 93, 11]]
w = [[110, 3, 13, 54], [94, 41, 93, 8], [110, 3, 13, 54], [42, 51, 93, 31]]

class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix
    def __add__(self, other):
        m = [[0 for j in range(len(self.matrix[0]))] for i in range(len(self.matrix))]
        for i in range(len(self.matrix)):
            for j in range(len(self.matrix[0])):
                m[i][j] = self.matrix[i][j] + other.matrix[i][j]
        return Matrix(m)
    def __str__(self):
        return f'{self.matrix}'
    def result_matrix(self):
        [print(' '.join(map(str, i))) for i in self.matrix] # сделал отдельную функцию, __str__ не принимает такое выражение.

print(f'пример №1')
x = Matrix(a)
y = Matrix(b)
z = Matrix(d)
j = Matrix(e)
print(x + y + z + j)
(x + y + z + j).result_matrix()
print(x + y)
(x + y).result_matrix()
print('\n')

print(f'пример №2')
x = Matrix(q)
y = Matrix(w)
print(x + y)
(x + y).result_matrix()


